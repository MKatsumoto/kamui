/* Auto-generated by genmsg_cpp for file /home/kamui/catkin_ws/src/amu_3002a_lite/srv/amu_control.srv */
#ifndef AMU_3002A_LITE_SERVICE_AMU_CONTROL_H
#define AMU_3002A_LITE_SERVICE_AMU_CONTROL_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace amu_3002a_lite
{
template <class ContainerAllocator>
struct amu_controlRequest_ {
  typedef amu_controlRequest_<ContainerAllocator> Type;

  amu_controlRequest_()
  : command(0)
  {
  }

  amu_controlRequest_(const ContainerAllocator& _alloc)
  : command(0)
  {
  }

  typedef int8_t _command_type;
  int8_t command;


  typedef boost::shared_ptr< ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct amu_controlRequest
typedef  ::amu_3002a_lite::amu_controlRequest_<std::allocator<void> > amu_controlRequest;

typedef boost::shared_ptr< ::amu_3002a_lite::amu_controlRequest> amu_controlRequestPtr;
typedef boost::shared_ptr< ::amu_3002a_lite::amu_controlRequest const> amu_controlRequestConstPtr;



template <class ContainerAllocator>
struct amu_controlResponse_ {
  typedef amu_controlResponse_<ContainerAllocator> Type;

  amu_controlResponse_()
  {
  }

  amu_controlResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct amu_controlResponse
typedef  ::amu_3002a_lite::amu_controlResponse_<std::allocator<void> > amu_controlResponse;

typedef boost::shared_ptr< ::amu_3002a_lite::amu_controlResponse> amu_controlResponsePtr;
typedef boost::shared_ptr< ::amu_3002a_lite::amu_controlResponse const> amu_controlResponseConstPtr;


struct amu_control
{

typedef amu_controlRequest Request;
typedef amu_controlResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct amu_control
} // namespace amu_3002a_lite

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "481ac5a494c3140a2539020bd74c82c7";
  }

  static const char* value(const  ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x481ac5a494c3140aULL;
  static const uint64_t static_value2 = 0x2539020bd74c82c7ULL;
};

template<class ContainerAllocator>
struct DataType< ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "amu_3002a_lite/amu_controlRequest";
  }

  static const char* value(const  ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 command\n\
\n\
";
  }

  static const char* value(const  ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "amu_3002a_lite/amu_controlResponse";
  }

  static const char* value(const  ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
";
  }

  static const char* value(const  ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::amu_3002a_lite::amu_controlRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.command);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct amu_controlRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::amu_3002a_lite::amu_controlResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct amu_controlResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<amu_3002a_lite::amu_control> {
  static const char* value() 
  {
    return "481ac5a494c3140a2539020bd74c82c7";
  }

  static const char* value(const amu_3002a_lite::amu_control&) { return value(); } 
};

template<>
struct DataType<amu_3002a_lite::amu_control> {
  static const char* value() 
  {
    return "amu_3002a_lite/amu_control";
  }

  static const char* value(const amu_3002a_lite::amu_control&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<amu_3002a_lite::amu_controlRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "481ac5a494c3140a2539020bd74c82c7";
  }

  static const char* value(const amu_3002a_lite::amu_controlRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<amu_3002a_lite::amu_controlRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "amu_3002a_lite/amu_control";
  }

  static const char* value(const amu_3002a_lite::amu_controlRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<amu_3002a_lite::amu_controlResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "481ac5a494c3140a2539020bd74c82c7";
  }

  static const char* value(const amu_3002a_lite::amu_controlResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<amu_3002a_lite::amu_controlResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "amu_3002a_lite/amu_control";
  }

  static const char* value(const amu_3002a_lite::amu_controlResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // AMU_3002A_LITE_SERVICE_AMU_CONTROL_H

